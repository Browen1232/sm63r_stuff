extends Camera2D
var scrollSpeed = 8;
onready var LD = get_parent();
onready var map = LD.get_node("TileMap");
onready var music = LD.get_node("Music");

var mousePos = Vector2(0, 0);
var mousePosStore = Vector2(0, 0);

const player = preload("res://Player.tscn");

const tile_enc = {
	"-1": "0",
	"0": "0",
	"1": "2K",
	"2": "2L",
	"3": "2M",
	"4": "2N",
	"5": "2O",
	"6": "2P",
	"7": "2Q",
	"8": "2R",
	"9": "2S",
	"10": "2T",
	"11": "2U",
	"12": "2V",
	"13": "2W",
	"14": "2X",
	"15": "2Y",
	"16": "2Z",
	"17": "2[",
	"18": "2\\",
	"19": "2]",
	"20": "2^",
	"21": "2_",
	"22": "2`",
	"23": "2a",
	"24": "2b",
	"25": "2c",
	"26": "2d",
	"27": "2e",
	"28": "2f",
	"29": "2g",
	"30": "2h",
	"31": "2i",
	"32": "2j",
	"33": "2k",
	"34": "2l",
	"35": "2m",
	"36": "2n",
	"37": "2o",
	"38": "2p",
	"39": "2q",
	"40": "2r",
	"41": "2s",
	"42": "2t",
	"43": "2u",
	"44": "2v",
	"45": "2w",
	"46": "32",
	"47": "33",
	"48": "34",
	"49": "35",
	"50": "36",
	"51": "37",
	"52": "38",
	"53": "39",
	"54": "3:",
	"55": "3;",
	"56": "3<",
	"57": "3=",
	"58": "3>",
	"59": "3?",
	"60": "3@",
	"61": "3A",
	"62": "3B",
	"63": "3C",
	"64": "3D",
	"65": "3E",
	"66": "3F",
	"67": "3G",
	"68": "3H",
	"69": "3I",
	"70": "3J",
	"71": "3K",
	"72": "3L",
	"73": "3M",
	"74": "3N",
	"75": "3O",
	"76": "3P",
	"77": "3Q",
	"78": "3d",
	"79": "3e",
	"80": "3f",
	"81": "3g",
	"82": "3h",
	"83": "3i",
	"84": "3j",
	"85": "3k",
	"86": "3l",
	"87": "3m",
	"88": "3n",
	"89": "3o",
	"90": "3p",
	"91": "3q",
	"92": "3r",
	"93": "3s",
	"94": "3t",
	"95": "3u",
	"96": "3v",
	"97": "3w",
	"98": "3x",
	"99": "3y",
	"100": "3z",
	"101": "3{",
	"102": "41",
	"103": "42",
	"104": "43",
	"105": "44",
	"106": "45",
	"107": "46",
	"108": "47",
	"109": "48",
	"110": "49",
	"111": "4:",
	"112": "4;",
	"113": "4<",
	"114": "4=",
	"115": "4>",
	"116": "4?",
	"117": "4@",
	"118": "4A",
	"119": "4B",
	"120": "4C",
	"121": "4D",
	"122": "4E",
	"123": "4F",
	"124": "4G",
	"125": "4H",
	"126": "4I",
	"127": "4J",
	"128": "4K",
	"129": "4L",
	"130": "4M",
	"131": "4N",
	"132": "4O",
	"133": "4P",
	"134": "4Q",
	"135": "4R",
	"136": "4S",
	"137": "4T",
	"138": "4U",
	"139": "4V",
	"140": "4W",
	"141": "4X",
	"142": "4Y",
	"143": "4Z",
	"144": "4[",
	"145": "4\\",
	"146": "4]",
	"147": "4^",
	"148": "4_",
	"149": "4`",
	"150": "4a",
	"151": "4b",
	"152": "4c",
	"153": "4d",
	"154": "4e",
	"155": "4f",
	"156": "4g",
	"157": "4h",
	"158": "4i",
	"159": "4j",
	"160": "4k",
	"161": "4l",
	"162": "4m",
	"163": "4n",
	"164": "4o",
	"165": "4p",
	"166": "4q",
	"167": "4r",
	"168": "4s",
	"169": "4t",
	"170": "4u",
	"171": "4v",
	"172": "4w",
	"173": "4x",
	"174": "4y",
	"175": "4z",
	"176": "52",
	"177": "53",
	"178": "54",
	"179": "55",
	"180": "56",
	"181": "57",
	"182": "58",
	"183": "59",
	"184": "5:",
	"185": "5;",
	"186": "5<",
	"187": "5=",
	"188": "5>",
	"189": "5?",
	"190": "5@",
	"191": "5A",
	"192": "5B",
	"193": "5C",
	"194": "5D",
	"195": "5E",
	"196": "5F",
	"197": "5G",
	"198": "5H",
	"199": "5I",
	"200": "5J",
	"201": "5K",
	"202": "5L",
	"203": "5M",
	"204": "5N",
	"205": "5O",
	"206": "5P",
	"207": "5Q",
	"208": "5R",
	"209": "5S",
	"210": "5T",
	"211": "5U",
	"212": "5V",
	"213": "5W",
	"214": "5X",
	"215": "5Y",
	"216": "5Z",
	"217": "5[",
	"218": "5\\",
	"219": "5]",
	"220": "5^",
	"221": "5d",
	"222": "5e",
	"223": "5f",
	"224": "5g",
	"225": "5h",
	"226": "5i",
	"227": "5j",
	"228": "5k",
	"229": "5l",
	"230": "5m",
	"231": "5n",
	"232": "5o",
	"233": "5p",
	"234": "5q",
	"235": "5r",
	"236": "5s",
	"237": "5t",
	"238": "5u",
	"239": "5v",
	"240": "5w",
	"241": "5x",
	"242": "5y",
	"243": "5z",
	"244": "5{",
	"245": "61",
	"246": "62",
	"247": "63",
	"248": "64",
	"249": "65",
	"250": "66",
	"251": "67",
	"252": "68",
	"253": "69",
	"254": "6:",
	"255": "6;",
	"256": "6<",
	"257": "6=",
	"258": "6>",
	"259": "6?",
	"260": "6@",
	"261": "6A",
	"262": "6B",
	"263": "6C",
	"264": "6D",
	"265": "6E",
	"266": "6F",
	"267": "6G",
	"268": "6K",
	"269": "6L",
	"270": "6M",
	"271": "6N",
	"272": "6O",
	"273": "6P",
	"274": "6Q",
	"275": "6R",
	"276": "6S",
	"277": "6T",
	"278": "6U",
	"279": "6V",
	"280": "6W",
	"281": "6X",
	"282": "6Y",
	"283": "6Z",
	"284": "6[",
	"285": "6\\",
	"286": "6]",
	"287": "6^",
	"288": "6_",
	"289": "6`",
	"290": "6a",
	"291": "6b",
	"292": "6c",
	"293": "6d",
	"294": "6e",
	"295": "6f",
	"296": "6g",
	"297": "6h",
	"298": "6i",
	"299": "6j",
	"300": "6k",
	"301": "6l",
	"302": "6m",
	"303": "6n",
	"304": "6o",
	"305": "6p",
	"306": "6q",
	"307": "6r",
	"308": "6s",
	"309": "6t",
	"310": "6u",
	"311": "6v",
	"312": "72",
	"313": "73",
	"314": "74",
	"315": "75",
	"316": "76",
	"317": "77",
	"318": "78",
	"319": "79",
	"320": "7:",
	"321": "7;",
	"322": "7<",
	"323": "7=",
	"324": "7>",
	"325": "7?",
	"326": "7@",
	"327": "7A",
	"328": "7B",
	"329": "7C",
	"330": "7D",
	"331": "7E",
	"332": "7F",
	"333": "7G",
	"334": "7H",
	"335": "7I",
	"336": "7J",
	"337": "7K",
	"338": "7L",
	"339": "7M",
	"340": "7N",
	"341": "7O",
	"342": "7P",
	"343": "7Q",
	"344": "7R",
	"345": "7S",
	"346": "7T",
	"347": "7U",
	"348": "7V",
	"349": "7W",
	"350": "7X",
	"351": "7Y",
	"352": "7Z",
	"353": "7d",
	"354": "7e",
	"355": "7f",
	"356": "7g",
	"357": "7h",
	"358": "7i",
	"359": "7j",
	"360": "7k",
	"361": "7l",
	"362": "7m",
	"363": "7n",
	"364": "7o",
	"365": "7p",
	"366": "7q",
	"367": "7r",
	"368": "7s",
	"369": "7t",
	"370": "7u",
	"371": "7v",
	"372": "7w",
	"373": "7x",
	"374": "7y",
	"375": "7z",
	"376": "7{",
	"377": "81",
	"378": "82",
	"379": "83",
	"380": "84",
	"381": "85",
	"382": "86",
	"383": "87",
	"384": "88",
	"385": "89",
	"386": "8:",
	"387": "8;",
	"388": "8<",
	"389": "8=",
	"390": "8>",
	"391": "8?",
	"392": "8@",
	"393": "8A",
	"394": "8B",
	"395": "8C",
	"396": "8D",
	"397": "8E",
	"398": "8F",
	"399": "8G",
	"400": "8H",
	"401": "8I",
	"402": "8K",
	"403": "8L",
	"404": "8M",
	"405": "8N",
	"406": "8O",
	"407": "8P",
	"408": "8Q",
	"409": "8R",
	"410": "8S",
	"411": "8T",
	"412": "8U",
	"413": "8V",
	"414": "8W",
	"415": "8X",
	"416": "8Y",
	"417": "8Z",
	"418": "8[",
	"419": "8\\",
	"420": "8]",
	"421": "8^",
	"422": "8_",
	"423": "8`",
	"424": "8a",
	"425": "8b",
	"426": "8c",
	"427": "8d",
	"428": "8e",
	"429": "8f",
	"430": "8g",
	"431": "8h",
	"432": "8i",
	"433": "8j",
	"434": "8k",
	"435": "8l",
	"436": "8m",
	"437": "8n",
	"438": "8o",
	"439": "8p",
	"440": "8q",
	"441": "8r",
	"442": "8s",
	"443": "8t",
	"444": "8u",
	"445": "8v",
	"446": "8w",
	"447": "8x",
	"448": "8y",
	"449": "8z",
	"450": "92",
	"451": "93",
	"452": "94",
	"453": "95",
	"454": "96",
	"455": "97",
	"456": "98",
	"457": "99",
	"458": "9:",
	"459": "9;",
	"460": "9<",
	"461": "9=",
	"462": "9>",
	"463": "9?",
	"464": "9@",
	"465": "9A",
	"466": "9B",
	"467": "9C",
	"468": "9D",
	"469": "9E",
	"470": "9F",
	"471": "9G",
	"472": "9H",
	"473": "9I",
	"474": "9J",
	"475": "9K",
	"476": "9L",
	"477": "9M",
	"478": "9N",
	"479": "9O",
	"480": "9P",
	"481": "9Q",
	"482": "9R",
	"483": "9S",
	"484": "9T",
	"485": "9U",
	"486": "9V",
	"487": "9W",
	"488": "9X",
	"489": "9Y",
	"490": "9Z",
	"491": "9[",
	"492": "9\\",
	"493": "9]",
	"494": "9^",
	"495": "9_",
	"496": "9`",
	"497": "9a",
	"498": "9b",
	"499": "9c",
	"500": "9d",
	"501": "9e",
	"502": "9f",
	"503": "9g",
	"504": "9h",
	"505": "9i",
	"506": "9j",
	"507": "9k",
	"508": "9l",
	"509": "9m",
	"510": "9n",
	"511": "9o",
	"512": "9p",
	"513": "9q",
	"514": "9r",
	"515": "9s",
	"516": "9t",
	"517": "9u",
	"518": "9v",
	"519": "9w",
	"520": "9x",
	"521": "9y",
	"522": "9z",
	"523": "9{",
	"524": ":1",
	"525": ":2",
	"526": ":3",
	"527": ":4",
	"528": ":5",
	"529": ":6",
	"530": ":7",
	"531": ":8",
	"532": ":9",
	"533": "::",
	"534": ":;",
	"535": ":<",
	"536": ":=",
	"537": ":>",
	"538": ":?",
	"539": ":@",
	"540": ":A",
	"541": ":B",
	"542": ":C",
	"543": ":D",
	"544": ":E",
	"545": ":F",
	"546": ":G",
	"547": ":H",
	"548": ":I",
	"549": ":J",
	"550": ":K",
	"551": ":L",
	"552": ":M",
	"553": ":N",
	"554": ":O",
	"555": ":P",
	"556": ":Q",
	"557": ":R",
	"558": ":S",
	"559": ":T",
	"560": ":U",
	"561": ":V",
	"562": ":W",
	"563": ":X",
	"564": ":Y",
	"565": ":Z",
	"566": ":[",
	"567": ":\\",
	"568": ":]",
	"569": ":^",
	"570": ":_",
	"571": ":`",
	"572": ":a",
	"573": ":b",
	"574": ":c",
	"575": ":d",
	"576": ":e",
	"577": ":f",
	"578": ":g",
	"579": ":h",
	"580": ":i",
	"581": ":j",
	"582": ":k",
	"583": ":l",
	"584": ":m",
	"585": ":n",
	"586": ":o",
	"587": ":p",
	"588": ":q",
	"589": ":r",
	"590": ":s",
	"591": ":t",
	"592": ":u",
	"593": ":v",
}

func save_code():
	var code = str(LD.levelWidth) + "x" + str(LD.levelHeight) + "~";
	var n = 0;
	var tileA;
	var tileB = tile_enc[str(map.get_cellv(Vector2(0, 0)) + 1)];
	var multiplier = 0;
	var testA;
	var testB;
	while n < LD.levelWidth*LD.levelHeight - 1:
		tileA = tileB;
		code += tileA;
		testA = n / LD.levelWidth;
		testB = n % LD.levelHeight;
		n += 1;
		tileB = tile_enc[str(map.get_cellv(Vector2(n / LD.levelHeight, n % LD.levelHeight)) + 1)];
		if tileA == tileB:
			while tileA == tileB && n < LD.levelWidth*LD.levelHeight:
				testA = n / LD.levelHeight;
				testB = n % LD.levelHeight;
				multiplier += 1;
				tileA = tile_enc[str(map.get_cellv(Vector2(n / LD.levelHeight, n % LD.levelHeight)) + 1)];
				n += 1;
			if (n == LD.levelWidth*LD.levelHeight):
				if (tileA == tileB):
					multiplier += 1;
					code += "*" + str(multiplier) + "*";
				else:
					code += "*" + str(multiplier) + "*" + tileA;
			else:
				code += "*" + str(multiplier) + "*";
			multiplier = 0;
			tileB = tileA;
			n -= 1;
	code += "~";
	for child in LD.get_children():
		if child != map && child != self && child != music:
			code += child.code + "|";
	code.erase(code.length() - 1, 1);
	code += "~" + LD.songID + "~" + LD.bgID + "~" + LD.levelName;
	return code;

func _process(delta):
	var iLeft = Input.is_action_pressed("LD_cam_left");
	var iRight = Input.is_action_pressed("LD_cam_right");
	var iUp = Input.is_action_pressed("LD_cam_up");
	var iDown = Input.is_action_pressed("LD_cam_down");
	var iPan = Input.is_action_pressed("LD_cam_pan");
	var iPlace = Input.is_action_pressed("LD_place");
	var iDelete = Input.is_action_pressed("LD_delete");
	mousePos = get_local_mouse_position();
	
	if iPan:
		position += mousePosStore - mousePos;
	else:
		#Horrific code compression - this is just for moving the camera
		position += Vector2((int(iRight) - int(iLeft))*scrollSpeed, (int(iDown) - int(iUp))*scrollSpeed);
		
	mousePosStore = mousePos;
	
	if iPlace:
		map.set_cellv(map.world_to_map(get_global_mouse_position()), 0);
		
	if iDelete:
		map.set_cellv(map.world_to_map(get_global_mouse_position()), -1);
		
	if iDown && Input.is_action_just_pressed("debug"):
		var playerSpawn = player.instance();
		playerSpawn.position = get_parent().startPos;
		get_parent().add_child(playerSpawn);
		
	if iRight && Input.is_action_pressed("debug"):
		save_code();
